<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEACABoBQAAFgAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAB
        AAAAAAAAA0ZfAAlFWwANRVwADUpeABJIXgAFSGEAA09jAAFKZgABT2cABUxkAAVPaQAET24AAFRqAAVY
        bwARUGcAEVVpABxWaAATWWoABVZzAApZdgAIXXYAC1h5AApdegAMWn0AEV90AB5ecAAsWWkACmF3AARk
        fAAIYHoAEGF0ABpiegAebH4AImZ8ADxjdQAwa3oAsWoAALJsAADWgggA1ocQANmKFADcjRgA3ZEfAMOB
        IADfkyMA3588AOSSIADmlioA4poxAOibNADlnTgA6J88ANWZQADYm0AAyZhQAOaeSADdoUUA6KFBAOWm
        SgDqpkwA6ahLAO2rVADopl0A769cANOlYADZqmEA3LFwANy3fwDsrGUA77BgAOy1agDst2wA8LJkAPG1
        aQDnvH8A9bpzAPG+fAAOZYEAC2iBABFhhQASZYUAF2qBABRsgQAQaIQAH26FABBiiAAUZ48AGWuLABxw
        gwAVcYsAFHSNABhzjQAfcI0AG2+VABh3kAAVeJIAGniSABl5lAAddJsAH3uZACNxiAAidpUAIH2XACB1
        mwAge58AH3miAB18sQAgfKMAQnKFAEZ5hwAjgKMAKIKmACiIowAigK0ALoWpAC2OrAAtkKsALZWuADWO
        sABNiJYAWY+cAEGeugBAobwARaK/AD+awgBHnsEAQ57FAEigxwBJo8oAS6fOAFOpwgBZrsQAVbDPAF62
        zQBAr9UATqrRAEys0gBOrdUAUKvRAFGv1gBYrtAAVLDXAFiy1QBettQAXbnTAF251gBWsdkAWLTZAF23
        3QBdut4AYLjWAGS71wBlvdUAZrzZAGG63ABivd8AZr7iAGXA2wBmwd0AaMDaAG3F2wBqxN4AbMXdAGfD
        5ABowOAAa8TgAG3F4QBoxeQAbsjiAG7J5QBkw+kAacPoAG3J6ABxyecAc8zmAHTN6QB5z+oAeNDqAHnR
        7wB41OwAcc3wAH/W8gB+1vQA576CAPLDhgDxxowA78qUAPLPnQCA2fEAg9r0AIbd9AAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8AAAAAAABmbiIhAAAAAAAAAAAAAFEVZHxrHwAAAAAAAAAAAA9vj6uWjBkAAAAAAAAAAFFwlIFs
        FwIGEBokHgAAAABmlH9RBlcXBmmPqnwSAABad5teDIyJiYGOlKy1khAAZZeXBo2JcmqJhwEEXbV6Hlqu
        lwallhcbY4kMAAakrR5ftqIOpbNOABWUVwACm6UeYLCuYpK2VREXj2gjBZuUE2CXs3Vnqrafn5t/Blib
        fW1ger6uU1qfsKqljxWAlHMeAFmivrN1WhwNHE90nYUgAAAAHaK+vqKDhJeutptTAAAAAAB4cYais76x
        hmJPAAAAAAAAAAB5U1NTXVMAAAAAAPh/AADgfwAAwH8AAIAHAACAAwAAAAEAAAAAAAAAEAAAARAAAAAA
        AAAAAAAAAAAAAIABAADAAwAA4AcAAPgfAAA=
</value>
  </data>
</root>